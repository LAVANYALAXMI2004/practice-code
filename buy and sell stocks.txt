// Brute-force approach
import java.util.*;

public class BruteForce {
    public static void main(String[] args) {
        Scanner s = new Scanner(System.in);
        int n = s.nextInt();
        int a[] = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = s.nextInt();
        }

        int max = 0;
        int profit = 0;
        for (int i = 0; i < n - 1; i++) { // fix: i < n-1
            for (int j = i + 1; j < n; j++) { // fix: j < n
                if (a[i] < a[j]) {
                    profit = a[j] - a[i];
                    max = Math.max(profit, max);
                }
            }
        }
        System.out.println("Brute-force max profit: " + max);
    }
}
// Optimized approach
import java.util.*;

public class Optimized {
    public static void main(String[] args) {
        Scanner s = new Scanner(System.in);
        int n = s.nextInt();
        int a[] = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = s.nextInt();
        }

        int min = a[0];
        int max = 0;
        for (int i = 1; i < n; i++) {
            if (a[i] < min) {
                min = a[i];
            }
            max = Math.max(max, a[i] - min);
        }

        System.out.println("Optimized max profit: " + max);
    }
}

