Example 1:

Input: s = "(()())(())"
Output: "()()()"
Explanation: 
The input string is "(()())(())", with primitive decomposition "(()())" + "(())".
After removing outer parentheses of each part, this is "()()" + "()" = "()()()".
Example 2:

Input: s = "(()())(())(()(()))"
Output: "()()()()(())"
Explanation: 
The input string is "(()())(())(()(()))", with primitive decomposition "(()())" + "(())" + "(()(()))".
After removing outer parentheses of each part, this is "()()" + "()" + "()(())" = "()()()()(())".
class Solution {
    public String removeOuterParentheses(String s) {
      StringBuilder st=new StringBuilder();
      Stack sk=new Stack();
      for(char ch:s.toCharArray()){
        if(ch=='('){
            if(!sk.isEmpty()){
                st.append(ch);
            }
          sk.push(ch); 
        }
         if(ch==')'){
            sk.pop();
            if(!sk.isEmpty()){
                st.append(ch);
            }
          }
      }  
      return st.toString();
    }